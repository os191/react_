{"ast":null,"code":"var _jsxFileName = \"/Users/gongjin/react/react-comment/src/components/comment-input/CommentInput.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './commentInput.css';\n\nclass CommentInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = e => {\n      const userName = e.target.value.trim();\n      this.setState({\n        userName\n      });\n    };\n\n    this.handleContent = e => {\n      const content = e.target.value.trim();\n      this.setState({\n        content\n      });\n    };\n\n    this.handleSubmit = () => {\n      const _this$state = this.state,\n            userName = _this$state.userName,\n            content = _this$state.content;\n\n      if (userName !== '' && content !== '') {\n        const comment = {\n          userName,\n          content\n        };\n        console.log(comment);\n        this.setState({\n          userName: '',\n          content: ''\n        });\n        this.props.addComment(comment);\n      }\n    };\n\n    this.state = {\n      userName: '',\n      content: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userName = _this$state2.userName,\n          content = _this$state2.content;\n    return React.createElement(\"div\", {\n      className: \"comment-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment-user-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u540D\"), React.createElement(\"div\", {\n      className: \"user-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: userName,\n      placeholder: \"\\u7528\\u6237\\u540D\",\n      onChange: this.handleUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"comment-content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\u8BC4\\u8BBA\\u5185\\u5BB9\"), React.createElement(\"div\", {\n      className: \"content-textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      rows: \"3\",\n      cols: \"20\",\n      value: content,\n      placeholder: \"\\u8BC4\\u8BBA\\u5185\\u5BB9\",\n      onChange: this.handleContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"comment-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\")));\n  }\n\n}\n\nCommentInput.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\nexport default CommentInput;","map":{"version":3,"sources":["/Users/gongjin/react/react-comment/src/components/comment-input/CommentInput.jsx"],"names":["React","Component","PropTypes","CommentInput","constructor","props","handleUserName","e","userName","target","value","trim","setState","handleContent","content","handleSubmit","state","comment","console","log","addComment","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './commentInput.css'\n\nclass CommentInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            userName:'',\n            content: ''\n         };\n    }\n    static propTypes = {\n        addComment: PropTypes.func.isRequired\n    }\n    handleUserName = (e) =>{\n        const userName = e.target.value.trim();\n        this.setState({userName})\n    }\n    handleContent = (e) =>{\n        const content = e.target.value.trim();\n        this.setState({content})\n    }\n    handleSubmit =() =>{\n        const { userName, content } = this.state\n        if(userName !== '' && content !== ''){\n            const comment = ({userName, content})\n            console.log(comment)\n            this.setState({userName:'', content:''})\n            this.props.addComment(comment)\n        }\n    }\n\n    render() {\n        const { userName, content } = this.state\n        return (\n            <div className='comment-left'>\n                <div className='comment-user-name'>\n                    <div className='user-name'>\n                        用户名\n                    </div>\n                    <div className='user-input'>\n                        <input type=\"text\" value={userName} placeholder='用户名' onChange={this.handleUserName}/>\n                    </div>\n                </div>\n                <div className='comment-content-name'>\n                    <div className='content-name'>\n                        评论内容\n                    </div>\n                    <div className='content-textarea'>\n                        <textarea rows=\"3\" cols=\"20\" value={content} placeholder='评论内容' onChange={this.handleContent}/>\n                    </div>\n                </div>\n                <div className='comment-submit'>\n                    <button onClick={this.handleSubmit}>提交</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CommentInput;"]},"metadata":{},"sourceType":"module"}